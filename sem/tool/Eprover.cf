Db        . Database ::= [Clause] ;

Fact      . Clause ::= Predicate ;
Rule      . Clause ::= Predicate ":-" [Predicate] ;
Directive . Clause ::= ":-" [Predicate] ;

NPred    . Predicate ::= "~" Term ;
TPred    . Predicate ::= Term;

TParen   . Term ::= "(" Term ")" ;

TAtom    . Term ::= Atom ;
VarT     . Term ::= Var ;
Complex  . Term ::= Atom "(" [Term] ")" ;
TInt     . Term ::= Integer ;

Atm      . Atom ::=  LIdent ;
-- SAtom    . Atom ::=  LitString ;

V        . Var ::= UIdent ;
A        . Var ::= Wild ;

-- List definitions

terminator Clause "." ;
separator nonempty Predicate "," ;
separator nonempty Term "," ;

-- Token definitions

token LitString '\'' (char - '\'')* '\'' ;
token UIdent (upper (letter | digit | '_' )*) ;
token LIdent (lower (letter | digit | '_' | '-')*) ;
token Wild   '_' (letter | digit | '_')* ;

-- Comments
comment "%" ;
